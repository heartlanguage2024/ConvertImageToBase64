jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Set up Git credentials
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Fetch and checkout production branch
        run: |
          git fetch origin
          git checkout production

      - name: Merge main into production
        run: |
          git pull origin production 

      - name: Push changes to production
        run: |
          git push origin production
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # âœ… Add Jenkins Trigger
      - name: Trigger Jenkins Job
        run: |
          $username = 'potato'
          $api_token = '110db95f19398729f40245888ff5f4c220'
          
          # Combine username and API token, and then base64 encode them
          $credentials = "${username}:${api_token}"
          $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes($credentials))
          
          # Set headers with base64-encoded credentials
          $headers = @{
              "Authorization" = "Basic $base64AuthInfo"
          }
          
          # Define the ngrok URL
          $ngrokUrl = "https://db53-210-139-66-104.ngrok-free.app"  # Ensure this URL is correct with the full protocol part
          $jenkinsUrl = "$ngrokUrl/job/potato/build"  # Combine the ngrok URL and Jenkins job endpoint

          # Trigger the Jenkins job using the full URL
          Invoke-WebRequest -Uri $jenkinsUrl -Method Post -Headers $headers
        shell: pwsh
