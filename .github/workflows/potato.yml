name: Potato Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        dotnet-version: [8.0]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Start ngrok and get URL
        run: |
          # Install ngrok (if not already installed)
          curl -s https://bin.equinox.io/c/4VmDzA7iaJ6/ngrok-stable-windows-amd64.zip -o ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath ngrok
          ./ngrok.exe http 8080 &

          # Wait a few seconds for ngrok to initialize
          Start-Sleep -Seconds 5

          # Get ngrok public URL
          $ngrokUrl = (Invoke-RestMethod -Uri http://localhost:4040/api/tunnels).tunnels[0].public_url
          Write-Output "ngrok URL: $ngrokUrl"
          echo "NGROK_URL=$ngrokUrl" >> $GITHUB_ENV

      - name: Trigger Jenkins Job
        run: |
          $username = 'potato'
          $api_token = '110db95f19398729f40245888ff5f4c220'
          
          # Combine username and API token, and then base64 encode them
          $credentials = "$username:$api_token"
          $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes($credentials))
          
          # Use the dynamically retrieved ngrok URL to trigger the Jenkins job
          $jenkinsUrl = "${{ secrets.NGROK_URL }}"
          Invoke-WebRequest -Uri "$jenkinsUrl/job/potato/build" -Method Post -Headers @{
              "Authorization" = "Basic $base64AuthInfo"
          }
        shell: pwsh
